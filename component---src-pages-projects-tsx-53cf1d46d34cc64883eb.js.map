{"version":3,"sources":["webpack:///./src/components/section.tsx","webpack:///./src/pages/projects.tsx","webpack:///./src/components/post-list.tsx"],"names":["SectionTitle","styled","h2","theme","fontSize","fonts","serif","colors","primary","SectionDescription","p","spacing","primaryLight","complementary","pageQuery","Projects","data","location","posts","site","siteMetadata","title","allMdx","nodes","map","post","key","fields","slug","to","itemProp","Header","header","Headline","Dateline","Section","section","Description","Thumbnail","div","breakpoints","tablet_portrait","Content","full","Article","article","text","backgroundLight","background","textLight","PostListItem","frontmatter","featuredImage","getImage","featured","itemScope","itemType","undefined","image","alt","date","dangerouslySetInnerHTML","__html","description","excerpt","PostList","ol"],"mappings":"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","file":"component---src-pages-projects-tsx-53cf1d46d34cc64883eb.js","sourcesContent":["import styled from \"styled-components\";\n\nconst SectionTitle = styled.h2`\n  font-size: ${({theme}) => theme.fontSize[5]};\n  font-family: ${({theme}) => theme.fonts.serif};\n  font-weight: lighter;\n  color: ${({theme}) => theme.colors.primary};\n  margin: 0;\n`;\n\nconst SectionDescription = styled.p`\n  font-size: ${({theme}) => theme.fontSize[2]};\n  margin-bottom: ${({theme}) => theme.spacing[14]};\n\n  a {\n    color: ${({ theme }) => theme.colors.primary};\n\n    border-bottom-style: dotted;\n    border-bottom-width: 2px;\n    border-bottom-color: ${({ theme }) => theme.colors.primary};\n\n    :hover,\n    :focus {\n      color: ${({ theme }) => theme.colors.primaryLight};\n\n      border-bottom-style: solid;\n      border-bottom-width: 3px;\n      border-bottom-color: ${({ theme }) => theme.colors.complementary};\n    }\n  }\n`;\n\nexport { SectionTitle, SectionDescription };\n","import React from \"react\";\nimport { Link, graphql, PageProps } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nimport { MdxNode } from \"../common/types\";\nimport { PostList, PostListItem } from \"../components/post-list\";\nimport { SectionDescription, SectionTitle } from \"../components/section\";\n\nconst pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n        timeToRead\n      }\n    }\n  }\n`;\n\ninterface Props extends PageProps {\n  data: {\n    allMdx: {\n      nodes: MdxNode[];\n    };\n    site: {\n      siteMetadata: {\n        title: string;\n      };\n    };\n  };\n}\n\nconst Projects = ({ data, location }: Props) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMdx.nodes;\n\n  return (\n    <Layout location={location}>\n      <SEO title=\"Projects\" />\n      <SectionTitle>Projects</SectionTitle>\n      <SectionDescription>\n        Here are some notable projects I've undertaken:\n      </SectionDescription>\n      <PostList>\n        {posts.map((post: MdxNode) => (\n          <li key={post.fields.slug}>\n            <Link to={`/projects${post.fields.slug}`} itemProp=\"url\">\n              <PostListItem post={post} />\n            </Link>\n          </li>\n        ))}\n      </PostList>\n    </Layout>\n  );\n};\n\nexport { Projects as default, pageQuery };\n","import React from \"react\";\n\nimport styled from \"styled-components\";\nimport Img from \"gatsby-image\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport { MdxNode } from \"../common/types\";\nimport theme from \"../styles/theme\";\n\nconst Header = styled.header`\n  margin-bottom: ${({ theme }) => theme.spacing[4]};\n`;\n\nconst Headline = styled.h2`\n  font-family: ${({ theme }) => theme.fonts.serif};\n  font-size: ${({ theme }) => theme.fontSize[3]};\n  font-weight: lighter;\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: ${({ theme }) => theme.spacing[1]};\n  margin-top: 0;\n`;\n\nconst Dateline = styled.p`\n  font-family: ${({ theme }) => theme.fonts.serif};\n  font-size: ${({ theme }) => theme.fontSize[0]};\n`;\n\nconst Section = styled.section`\n  margin-bottom: 0;\n`;\n\nconst Description = styled.p``;\n\nconst Thumbnail = styled.div`\n  margin-right: ${({ theme }) => theme.spacing[0]};\n  margin-bottom: ${({ theme }) => theme.spacing[4]};\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet_portrait}) {\n    margin-right: ${({ theme }) => theme.spacing[4]};\n    margin-bottom: ${({ theme }) => theme.spacing[0]};\n  }\n  flex-basis: 40%;\n`;\n\nconst Content = styled.div<ContentProps>`\n  flex-basis: ${({ full }) => full ? '100%' : '60%' }\n`;\n\nconst Article = styled.article`\n  margin-bottom: ${({ theme }) => theme.spacing[4]};\n  margin-top: ${({ theme }) => theme.spacing[4]};\n  padding: ${({ theme }) => theme.spacing[4]};\n  border-radius: 4px;\n  color: ${({ theme }) => theme.colors.text};\n\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet_portrait}) {\n    flex-direction: row;\n  }\n\n  transition: background-color 0.1s;\n\n  background-color: ${({ theme }) => theme.colors.backgroundLight};\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet_portrait}) {\n    background-color: ${({ theme }) => theme.colors.background};\n  }\n\n  // x:hover and x :hover are not the same.\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.backgroundLight};\n    ${Headline} {\n      color: ${({ theme }) => theme.colors.primaryLight};\n    }\n    ${Dateline} {\n      color: ${({ theme }) => theme.colors.textLight};\n    }\n    ${Description} {\n      color: ${({ theme }) => theme.colors.textLight};\n    }\n  }\n`;\n\ninterface ContentProps {\n  full: boolean;\n}\n\ninterface Props {\n  post: MdxNode;\n}\n\nconst PostListItem = ({ post }: Props) => {\n  const title = post.frontmatter.title || post.fields.slug;\n  const featuredImage = getImage(post.frontmatter.featured);\n  return (\n    <Article itemScope itemType=\"http://schema.org/Article\">\n      {\n        post.frontmatter.featured &&\n        featuredImage !== undefined ?\n        <Thumbnail>\n          {/* <Img\n            fluid={post.frontmatter.featured.childImageSharp.fluid}\n            alt={post.frontmatter.title}\n          /> */}\n          <GatsbyImage\n            image={featuredImage}\n            alt={post.frontmatter.title}\n          />\n        </Thumbnail>\n        : null\n      }\n      {/* if there is a thumbnail then content is 60% else 100% width */}\n      <Content full={featuredImage === undefined}>\n        <Header>\n          <Headline>\n            {/* relative link to e.g. /posts/post1-slug/ */}\n            <span itemProp=\"headline\">{title}</span>\n          </Headline>\n          <Dateline>{post.frontmatter.date}</Dateline>\n        </Header>\n        <Section>\n          <Description\n            dangerouslySetInnerHTML={{\n              __html: post.frontmatter.description || post.excerpt,\n            }}\n            itemProp=\"description\"\n          />\n        </Section>\n      </Content>\n    </Article>\n  );\n};\n\nconst PostList = styled.ol`\n  list-style-type: none;\n\n  // remove default margin and padding of list\n  margin: 0;\n  padding: 0;\n`;\n\nexport { PostList, PostListItem };\n\n"],"sourceRoot":""}